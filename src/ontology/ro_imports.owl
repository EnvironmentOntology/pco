Prefix(:=<http://purl.obolibrary.org/obo/ro.owl#>)
Prefix(dc:=<http://purl.org/dc/elements/1.1/>)
Prefix(obo:=<http://purl.obolibrary.org/obo/>)
Prefix(owl:=<http://www.w3.org/2002/07/owl#>)
Prefix(rdf:=<http://www.w3.org/1999/02/22-rdf-syntax-ns#>)
Prefix(xml:=<http://www.w3.org/XML/1998/namespace>)
Prefix(xsd:=<http://www.w3.org/2001/XMLSchema#>)
Prefix(foaf:=<http://xmlns.com/foaf/0.1/>)
Prefix(rdfs:=<http://www.w3.org/2000/01/rdf-schema#>)
Prefix(oboInOwl:=<http://www.geneontology.org/formats/oboInOwl#>)


Ontology(<https://raw.githubusercontent.com/PopulationAndCommunityOntology/pco/master/src/ontology/ro_imports.owl>
Annotation(dc:source <http://obofoundry.org/ro>)
Annotation(dc:title "OBO Relations Ontology imports for PCO"@en)
Annotation(dc:description "The OBO Relations Ontology (RO) is a collection of OWL relations (ObjectProperties) intended for use across a wide variety of biological ontologies. This ontology contains a subset of the RO."@en)
Annotation(foaf:homepage "https://code.google.com/p/obo-relations/w/ROCore"^^xsd:anyURI)

Declaration(ObjectProperty(obo:BFO_0000050))
Declaration(ObjectProperty(obo:BFO_0000051))
Declaration(ObjectProperty(obo:BFO_0000054))
Declaration(ObjectProperty(obo:BFO_0000055))
Declaration(ObjectProperty(obo:BFO_0000062))
Declaration(ObjectProperty(obo:BFO_0000063))
Declaration(ObjectProperty(obo:BFO_0000066))
Declaration(ObjectProperty(obo:BFO_0000067))
Declaration(ObjectProperty(obo:RO_0000052))
Declaration(ObjectProperty(obo:RO_0000053))
Declaration(ObjectProperty(obo:RO_0000056))
Declaration(ObjectProperty(obo:RO_0000057))
Declaration(ObjectProperty(obo:RO_0001000))
Declaration(ObjectProperty(obo:RO_0001001))
Declaration(ObjectProperty(obo:RO_0001015))
Declaration(ObjectProperty(obo:RO_0001018))
Declaration(ObjectProperty(obo:RO_0001019))
Declaration(ObjectProperty(obo:RO_0001025))
Declaration(ObjectProperty(obo:RO_0002081))
Declaration(ObjectProperty(obo:RO_0002082))
Declaration(ObjectProperty(obo:RO_0002083))
Declaration(ObjectProperty(obo:RO_0002084))
Declaration(ObjectProperty(obo:RO_0002085))
Declaration(ObjectProperty(obo:RO_0002086))
Declaration(ObjectProperty(obo:RO_0002087))
Declaration(ObjectProperty(obo:RO_0002088))
Declaration(ObjectProperty(obo:RO_0002089))
Declaration(ObjectProperty(obo:RO_0002090))
Declaration(ObjectProperty(obo:RO_0002091))
Declaration(ObjectProperty(obo:RO_0002092))
Declaration(ObjectProperty(obo:RO_0002093))
Declaration(ObjectProperty(obo:RO_0002131))
Declaration(ObjectProperty(obo:RO_0002150))
Declaration(ObjectProperty(obo:RO_0002151))
Declaration(ObjectProperty(obo:RO_0002163))
Declaration(ObjectProperty(obo:RO_0002180))
Declaration(ObjectProperty(obo:RO_0002217))
Declaration(ObjectProperty(obo:RO_0002218))
Declaration(ObjectProperty(obo:RO_0002219))
Declaration(ObjectProperty(obo:RO_0002220))
Declaration(ObjectProperty(obo:RO_0002221))
Declaration(ObjectProperty(obo:RO_0002222))
Declaration(ObjectProperty(obo:RO_0002223))
Declaration(ObjectProperty(obo:RO_0002224))
Declaration(ObjectProperty(obo:RO_0002229))
Declaration(ObjectProperty(obo:RO_0002230))
Declaration(ObjectProperty(obo:RO_0002233))
Declaration(ObjectProperty(obo:RO_0002234))
Declaration(ObjectProperty(obo:RO_0002314))
Declaration(ObjectProperty(obo:RO_0002323))
Declaration(ObjectProperty(obo:RO_0002350))
Declaration(ObjectProperty(obo:RO_0002351))
Declaration(ObjectProperty(obo:RO_0002352))
Declaration(ObjectProperty(obo:RO_0002353))
Declaration(ObjectProperty(obo:RO_0002354))
Declaration(ObjectProperty(owl:topObjectProperty))
Declaration(NamedIndividual(obo:RO_0001901))
Declaration(NamedIndividual(obo:RO_0001902))
Declaration(AnnotationProperty(obo:IAO_0000111))
Declaration(AnnotationProperty(obo:IAO_0000112))
Declaration(AnnotationProperty(obo:IAO_0000114))
Declaration(AnnotationProperty(obo:IAO_0000115))
Declaration(AnnotationProperty(obo:IAO_0000116))
Declaration(AnnotationProperty(obo:IAO_0000117))
Declaration(AnnotationProperty(obo:IAO_0000118))
Declaration(AnnotationProperty(obo:IAO_0000119))
Declaration(AnnotationProperty(obo:IAO_0000232))
Declaration(AnnotationProperty(obo:IAO_0000412))
Declaration(AnnotationProperty(obo:IAO_0000424))
Declaration(AnnotationProperty(obo:IAO_0000425))
Declaration(AnnotationProperty(obo:IAO_0000426))
Declaration(AnnotationProperty(obo:RO_0001900))
Declaration(AnnotationProperty(obo:RO_0002161))
Declaration(AnnotationProperty(dc:contributor))
Declaration(AnnotationProperty(dc:creator))
Declaration(AnnotationProperty(dc:publisher))
Declaration(AnnotationProperty(dc:source))
Declaration(AnnotationProperty(dc:title))
Declaration(AnnotationProperty(oboInOwl:shorthand))
Declaration(AnnotationProperty(rdfs:label))
Declaration(AnnotationProperty(foaf:homepage))
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Parthood as a relation between instances: The primitive instance-level relation p part_of p1 is illustrated in assertions such as: this instance of rhodopsin mediated phototransduction part_of this instance of visual perception.    This relation satisfies at least the following standard axioms of mereology: reflexivity (for all p, p part_of p); anti-symmetry (for all p, p1, if p part_of p1 and p1 part_of p then p and p1 are identical); and transitivity (for all p, p1, p2, if p part_of p1 and p1 part_of p2, then p part_of p2). Analogous axioms hold also for parthood as a relation between spatial regions.    For parthood as a relation between continuants, these axioms need to be modified to take account of the incorporation of a temporal argument. Thus for example the axiom of transitivity for continuants will assert that if c part_of c1 at t and c1 part_of c2 at t, then also c part_of c2 at t.    Parthood as a relation between classes: To define part_of as a relation between classes we again need to distinguish the two cases of continuants and processes, even though the explicit reference to instants of time now falls away. For continuants, we have C part_of C1 if and only if any instance of C at any time is an instance-level part of some instance of C1 at that time, as for example in: cell nucleus part_ of cell."@en)
AnnotationAssertion(dc:source obo:BFO_0000050 "http://www.obofoundry.org/ro/#OBO_REL:part_of")
AnnotationAssertion(rdfs:label obo:BFO_0000050 "part of"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000050 "Intended meaning:
Ambiguous between continuant-parthood and occurrent-parthood.

domain: continuant
range: continuant
time: at some time

domain: occurrent
range: occurrent
time: atemporal"@en)
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000050 "part of"@en)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000050 obo:RO_0001901)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000050 "part_of"@en)
SubObjectPropertyOf(obo:BFO_0000050 obo:RO_0002131)
InverseObjectProperties(obo:BFO_0000050 obo:BFO_0000051)
TransitiveObjectProperty(obo:BFO_0000050)
AnnotationAssertion(obo:RO_0001900 obo:BFO_0000051 obo:RO_0001901)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000051 "has_part"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000051 "has part"@en)
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000051 "has part"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000051 "Intended meaning:
Ambiguous between continuant-parthood and occurrent-parthood.

domain: continuant
range: continuant
time: at some time

domain: occurrent
range: occurrent
time: atemporal"@en)
SubObjectPropertyOf(obo:BFO_0000051 obo:RO_0002131)
TransitiveObjectProperty(obo:BFO_0000051)
AnnotationAssertion(rdfs:label obo:BFO_0000054 "realized in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "is realized by"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000054 "Intended meaning:
domain: realizable entity
range: processual entity
time: atemporal"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000054 "realized_in"@en)
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000054 "realized in"@en)
InverseObjectProperties(obo:BFO_0000055 obo:BFO_0000054)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000055 "Intended meaning:
domain: processual entity
range: realizable entity
time: atemporal"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000055 "realizes"@en)
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000055 "realizes"@en)
AnnotationAssertion(dc:source obo:BFO_0000062 "http://www.obofoundry.org/ro/#OBO_REL:preceded_by")
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "is preceded by"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000062 "An example is: translation preceded_by transcription; aging preceded_by development (not however death preceded_by aging). Where derives_from links classes of continuants, preceded_by links classes of processes. Clearly, however, these two relations are not independent of each other. Thus if cells of type C1 derive_from cells of type C, then any cell division involving an instance of C1 in a given lineage is preceded_by cellular processes involving an instance of C.    The assertion P preceded_by P1 tells us something about Ps in general: that is, it tells us something about what happened earlier, given what we know about what happened later. Thus it does not provide information pointing in the opposite direction, concerning instances of P1 in general; that is, that each is such as to be succeeded by some instance of P. Note that an assertion to the effect that P preceded_by P1 is rather weak; it tells us little about the relations between the underlying instances in virtue of which the preceded_by relation obtains. Typically we will be interested in stronger relations, for example in the relation immediately_preceded_by, or in relations which combine preceded_by with a condition to the effect that the corresponding instances of P and P1 share participants, or that their participants are connected by relations of derivation, or (as a first step along the road to a treatment of causality) that the one process in some way affects (for example, initiates or regulates) the other."@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000062 "preceded_by"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000062 "preceded by"@en)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000062 "Intended meaning:
domain: occurrent
range: occurrent
time: atemporal"@en)
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000062 "preceded by"@en)
SubObjectPropertyOf(obo:BFO_0000062 obo:RO_0002086)
InverseObjectProperties(obo:BFO_0000062 obo:BFO_0000063)
TransitiveObjectProperty(obo:BFO_0000062)
AnnotationAssertion(obo:IAO_0000116 obo:BFO_0000063 "Intended meaning:
domain: occurrent
range: occurrent
time: atemporal"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000063 "precedes"@en)
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000063 "precedes"@en)
SubObjectPropertyOf(obo:BFO_0000063 obo:RO_0002222)
TransitiveObjectProperty(obo:BFO_0000063)
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000066 "occurs in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "unfolds_in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "occurs_in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "Intended meaning:
domain: occurrent
range: independent continuant
time: atemporal"@en)
AnnotationAssertion(obo:IAO_0000118 obo:BFO_0000066 "unfolds in"@en)
AnnotationAssertion(rdfs:label obo:BFO_0000066 "occurs in"@en)
InverseObjectProperties(obo:BFO_0000066 obo:BFO_0000067)
AnnotationAssertion(rdfs:label obo:BFO_0000067 "contains process"@en)
AnnotationAssertion(obo:IAO_0000111 obo:BFO_0000067 "site of"@en)
AnnotationAssertion(obo:IAO_0000111 obo:RO_0000052 "inheres in"@en)
AnnotationAssertion(rdfs:label obo:RO_0000052 "inheres in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000052 "inheres_in"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000052 obo:RO_0001901)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000052 "Intended meaning:
domain: specifically dependent continuant
range: independent continuant
time: at all times

A specifically dependent continuant A inheres in its independent continuant B at all times during which A exists."@en)
InverseObjectProperties(obo:RO_0000053 obo:RO_0000052)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "bearer_of"@en)
AnnotationAssertion(rdfs:label obo:RO_0000053 "bearer of"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000053 "Intended meaning:
domain: independent continuant
range: specifically dependent continuant
time: at some time"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000053 "is bearer of"@en)
AnnotationAssertion(obo:IAO_0000111 obo:RO_0000053 "bearer of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0000053 obo:RO_0001901)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000056 "Intended meaning:
domain: continuant and (not spatial region)
range: processual entity
time: at some time"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000056 "participates_in"@en)
AnnotationAssertion(rdfs:label obo:RO_0000056 "participates in"@en)
AnnotationAssertion(obo:IAO_0000111 obo:RO_0000056 "participates in"@en)
InverseObjectProperties(obo:RO_0000057 obo:RO_0000056)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0000057 "has_participant"@en)
AnnotationAssertion(dc:source obo:RO_0000057 "http://www.obofoundry.org/ro/#OBO_REL:has_participant")
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000057 "Has_participant is a primitive instance-level relation between a process, a continuant, and a time at which the continuant participates in some way in the process. The relation obtains, for example, when this particular process of oxygen exchange across this particular alveolar membrane has_participant this particular sample of hemoglobin at this particular time."@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0000057 "Intended meaning:
domain: processual entity
range: continuant and (not spatial region)
time: at some time"@en)
AnnotationAssertion(rdfs:label obo:RO_0000057 "has participant"@en)
AnnotationAssertion(obo:IAO_0000111 obo:RO_0000057 "has participant"@en)
AnnotationAssertion(rdfs:comment obo:RO_0001000 "See also BFO_0001009"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0001000 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:RO_0001000 "derives from"@en)
SubObjectPropertyOf(obo:RO_0001000 owl:topObjectProperty)
InverseObjectProperties(obo:RO_0001001 obo:RO_0001000)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0001001 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:RO_0001001 "derives into"@en)
SubObjectPropertyOf(obo:RO_0001001 owl:topObjectProperty)
AnnotationAssertion(rdfs:label obo:RO_0001015 "location of"@en)
AnnotationAssertion(obo:IAO_0000111 obo:RO_0001015 "location of"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001015 "location_of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0001015 obo:RO_0001901)
InverseObjectProperties(obo:RO_0001025 obo:RO_0001015)
TransitiveObjectProperty(obo:RO_0001015)
AnnotationAssertion(obo:IAO_0000111 obo:RO_0001018 "contained in"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001018 "Containment is location not involving parthood, and arises only where some immaterial continuant is involved.")
AnnotationAssertion(obo:RO_0001900 obo:RO_0001018 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0001018 "contained in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001018 "contained_in"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001018 "Containment obtains in each case between material and immaterial continuants, for instance: lung contained_in thoracic cavity; bladder contained_in pelvic cavity. Hence containment is not a transitive relation.    If c part_of c1 at t then we have also, by our definition and by the axioms of mereology applied to spatial regions, c located_in c1 at t. Thus, many examples of instance-level location relations for continuants are in fact cases of instance-level parthood. For material continuants location and parthood coincide. Containment is location not involving parthood, and arises only where some immaterial continuant is involved. To understand this relation, we first define overlap for continuants as follows:    c1 overlap c2 at t =def for some c, c part_of c1 at t and c part_of c2 at t. The containment relation on the instance level can then be defined (see definition):"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001018 "Intended meaning:
domain: material entity
range: spatial region or site (immaterial continuant)
        "@en)
InverseObjectProperties(obo:RO_0001018 obo:RO_0001019)
AnnotationAssertion(rdfs:label obo:RO_0001019 "contains"@en)
AnnotationAssertion(obo:IAO_0000111 obo:RO_0001019 "contains"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0001019 obo:RO_0001901)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001019 "Intended meaning:
domain: spatial region or site (immaterial continuant)
range: material entity
        "@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0001025 obo:RO_0001901)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0001025 "located_in"@en)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0001025 "Location as a relation between instances: The primitive instance-level relation c located_in r at t reflects the fact that each continuant is at any given time associated with exactly one spatial region, namely its exact location. Following we can use this relation to define a further instance-level location relation - not between a continuant and the region which it exactly occupies, but rather between one continuant and another. c is located in c1, in this sense, whenever the spatial region occupied by c is part_of the spatial region occupied by c1.    Note that this relation comprehends both the relation of exact location between one continuant and another which obtains when r and r1 are identical (for example, when a portion of fluid exactly fills a cavity), as well as those sorts of inexact location relations which obtain, for example, between brain and head or between ovum and uterus"@en)
AnnotationAssertion(obo:IAO_0000111 obo:RO_0001025 "located in"@en)
AnnotationAssertion(rdfs:label obo:RO_0001025 "located in"@en)
AnnotationAssertion(dc:source obo:RO_0001025 "http://www.obofoundry.org/ro/#OBO_REL:located_in")
TransitiveObjectProperty(obo:RO_0001025)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002081 "<="@en)
AnnotationAssertion(rdfs:comment obo:RO_0002081 "Primitive instance level timing relation between events")
AnnotationAssertion(rdfs:label obo:RO_0002081 "before_or_simultaneous_with"@en)
SubObjectPropertyOf(obo:RO_0002081 obo:RO_0002222)
AnnotationAssertion(rdfs:label obo:RO_0002082 "simultaneous_with"@en)
AnnotationAssertion(rdfs:comment obo:RO_0002082 "t1 simultaneous_with t2 iff:=  t1 before_or_simultaneous_with t2  and not (t1 before t2)"@en)
SubObjectPropertyOf(obo:RO_0002082 obo:RO_0002081)
TransitiveObjectProperty(obo:RO_0002082)
AnnotationAssertion(rdfs:label obo:RO_0002083 "before"@en)
AnnotationAssertion(rdfs:comment obo:RO_0002083 "t1 before t2 iff:=  t1 before_or_simulataneous_with t2  and not (t1 simultaeous_with t2)"@en)
SubObjectPropertyOf(obo:RO_0002083 obo:RO_0002081)
TransitiveObjectProperty(obo:RO_0002083)
AnnotationAssertion(rdfs:label obo:RO_0002084 "during_which_ends"@en)
AnnotationAssertion(rdfs:comment obo:RO_0002084 "Previously had ID  http://purl.obolibrary.org/obo/RO_0002122 in test files in sandpit - but this seems to have been dropped from ro-edit.owl at some point.  No re-use under this ID AFAIK, but leaving note here in case we run in to clashes down the line.  Official ID now chosen from DOS ID range.")
SubObjectPropertyOf(obo:RO_0002084 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002084 obo:RO_0002093)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002085 "di")
AnnotationAssertion(rdfs:comment obo:RO_0002085 "Previously had ID  http://purl.obolibrary.org/obo/RO_0002124 in test files in sandpit - but this seems to have been dropped from ro-edit.owl at some point.  No re-use under this ID AFAIK, but leaving note here in case we run in to clashes down the line.  Official ID now chosen from DOS ID range.")
AnnotationAssertion(rdfs:label obo:RO_0002085 "encompasses"@en)
SubObjectPropertyOf(obo:RO_0002085 obo:RO_0002088)
InverseObjectProperties(obo:RO_0002085 obo:RO_0002092)
TransitiveObjectProperty(obo:RO_0002085)
AnnotationAssertion(rdfs:label obo:RO_0002086 "ends_after"@en)
AnnotationAssertion(rdfs:comment obo:RO_0002086 "X ends_after Y iff: end(Y) before_or_simultaneous_with end(X)"@en)
SubObjectPropertyOf(obo:RO_0002086 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002086)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002087 "starts_at_end_of")
AnnotationAssertion(rdfs:label obo:RO_0002087 "immediately_preceded_by"@en)
AnnotationAssertion(rdfs:comment obo:RO_0002087 "X immediately_preceded_by Y iff: end(X) simultaneous_with start(Y)"@en)
SubObjectPropertyOf(obo:RO_0002087 obo:BFO_0000062)
InverseObjectProperties(obo:RO_0002087 obo:RO_0002090)
AnnotationAssertion(rdfs:comment obo:RO_0002088 "Previously had ID  http://purl.obolibrary.org/obo/RO_0002123 in test files in sandpit - but this seems to have been dropped from ro-edit.owl at some point.  No re-use under this ID AFAIK, but leaving note here in case we run in to clashes down the line.  Official ID now chosen from DOS ID range.")
AnnotationAssertion(rdfs:label obo:RO_0002088 "during_which_starts"@en)
SubObjectPropertyOf(obo:RO_0002088 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002088 obo:RO_0002091)
AnnotationAssertion(rdfs:label obo:RO_0002089 "starts_before"@en)
SubObjectPropertyOf(obo:RO_0002089 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002089)
AnnotationAssertion(rdfs:comment obo:RO_0002090 "X immediately_precedes_Y iff: end(X) simultaneous_with start(Y)"@en)
AnnotationAssertion(rdfs:label obo:RO_0002090 "immediately_precedes"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "meets")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002090 "ends_at_start_of")
SubObjectPropertyOf(obo:RO_0002090 obo:BFO_0000062)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002091 "io")
AnnotationAssertion(rdfs:label obo:RO_0002091 "starts_during"@en)
AnnotationAssertion(rdfs:comment obo:RO_0002091 "X starts_during Y iff: (start(Y) before_or_simultaneous_with start(X)) AND (start(X) before_or_simultaneous_with end(Y))"@en)
SubObjectPropertyOf(obo:RO_0002091 obo:RO_0002222)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002092 "d")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002092 "during")
AnnotationAssertion(rdfs:comment obo:RO_0002092 "X happens_during Y iff: (start(Y) before_or_simultaneous_with start(X)) AND (end(X) before_or_simultaneous_with end(Y))"@en)
AnnotationAssertion(rdfs:label obo:RO_0002092 "happens_during"@en)
SubObjectPropertyOf(obo:RO_0002092 obo:RO_0002093)
TransitiveObjectProperty(obo:RO_0002092)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002093 "overlaps")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002093 "o")
AnnotationAssertion(rdfs:comment obo:RO_0002093 "X ends_during Y iff: ((start(Y) before_or_simultaneous_with end(X)) AND end(X) before_or_simultaneous_with end(Y). "@en)
AnnotationAssertion(rdfs:label obo:RO_0002093 "ends_during"@en)
SubObjectPropertyOf(obo:RO_0002093 obo:RO_0002222)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002131 "x overlaps y if and only if there exists some z such that x has part z and z part of y")
AnnotationAssertion(rdfs:label obo:RO_0002131 "overlaps"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002131 obo:RO_0001901)
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002131 "http://purl.obolibrary.org/obo/BFO_0000051 some (http://purl.obolibrary.org/obo/BFO_0000050 some ?Y)")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002131 obo:IAO_0000125)
SubObjectPropertyOf(obo:RO_0002131 obo:RO_0002323)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002150 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002150 "David Osumi-Sutherland"^^xsd:string)
AnnotationAssertion(obo:IAO_0000232 obo:RO_0002150 "Consider relabeling this to \"continuous with\" (FMA:85972). The standard notion of connectedness does not imply shared boundaries - e.g. Glasgow connected_to Edinburgh via M8; my patella connected_to my femur (via patellar-femoral joint)")
AnnotationAssertion(rdfs:label obo:RO_0002150 "connected to"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002150 "X connected_to Y if and only if X and Y share a fiat boundary."^^xsd:string)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002150 obo:RO_0001901)
SubObjectPropertyOf(obo:RO_0002150 obo:RO_0002323)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002151 obo:IAO_0000125)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002151 obo:RO_0001901)
AnnotationAssertion(obo:IAO_0000426 obo:RO_0002151 "(forall (?x ?y) 
	(iff 
		(proper_overlaps ?x ?y)
		(and 
			(overlaps ?x ?y)
			(not (part_of ?x ?y)) 
			(not (part_of ?y ?x)))))"^^xsd:string)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002151 "partially overlaps"^^xsd:string)
AnnotationAssertion(rdfs:label obo:RO_0002151 "proper overlaps"@en)
SubObjectPropertyOf(obo:RO_0002151 obo:RO_0002131)
AnnotationAssertion(rdfs:label obo:RO_0002163 "spatially disjoint from"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002163 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002163 "There are two ways to encode this as a shortcut relation. The other possibility to use an annotation assertion between two classes, and expand this to a disjointness axiom. "@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002163 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000424 obo:RO_0002163 "BFO_0000051 exactly 0 (BFO_0000050 some ?Y)")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002163 obo:RO_0001901)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002163 "A is spatially_disjoint_from B if and only if they have no parts in common")
SubObjectPropertyOf(obo:RO_0002163 obo:RO_0002323)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002180 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:RO_0002180 "has component"@en)
AnnotationAssertion(rdfs:comment obo:RO_0002180 "For use in recording has_part with a cardinality constraint."@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002180 obo:RO_0001901)
SubObjectPropertyOf(obo:RO_0002180 obo:BFO_0000051)
AnnotationAssertion(rdfs:label obo:RO_0002217 "actively participates in"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002217 "agent in")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002217 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002217 "x actively participates in y if and only if x participates in y and x realizes some active role")
SubObjectPropertyOf(obo:RO_0002217 obo:RO_0000056)
InverseObjectProperties(obo:RO_0002217 obo:RO_0002218)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002218 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002218 "has agent")
AnnotationAssertion(rdfs:label obo:RO_0002218 "has active participant"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002218 "x has participant y if and only if x realizes some active role that inheres in y")
SubObjectPropertyOf(obo:RO_0002218 obo:RO_0000057)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002219 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002219 "x surrounded_by y if and only if x is adjacent to y and for every region r that is adjacent to x, r overlaps y")
AnnotationAssertion(rdfs:label obo:RO_0002219 "surrounded by"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002219 obo:RO_0001901)
SubObjectPropertyOf(obo:RO_0002219 obo:RO_0002220)
InverseObjectProperties(obo:RO_0002221 obo:RO_0002219)
AnnotationAssertion(obo:IAO_0000116 obo:RO_0002220 "belongs in BFO?")
AnnotationAssertion(rdfs:label obo:RO_0002220 "adjacent to"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002220 "x adjacent to y if and only if x and y share a boundary")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002220 obo:IAO_0000125)
AnnotationAssertion(rdfs:comment obo:RO_0002220 "TODO: replaced by BFO_0001008"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002220 obo:RO_0001901)
SubObjectPropertyOf(obo:RO_0002220 obo:RO_0002163)
AnnotationAssertion(rdfs:label obo:RO_0002221 "surrounds"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002221 obo:IAO_0000125)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002221 obo:RO_0001901)
SubObjectPropertyOf(obo:RO_0002221 obo:RO_0002220)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002222 "Allen")
AnnotationAssertion(rdfs:label obo:RO_0002222 "temporally related to"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002222 obo:IAO_0000125)
AnnotationAssertion(rdfs:comment obo:RO_0002222 "A relation that holds between two occurrents. This is a grouping relation that collects together all the Allen relations.")
AnnotationAssertion(dc:source obo:RO_0002222 "https://docs.google.com/document/d/1kBv1ep_9g3sTR-SD3jqzFqhuwo9TPNF-l-9fUDbO6rM/edit?pli=1"^^xsd:anyURI)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002223 "inverse of starts with")
AnnotationAssertion(rdfs:label obo:RO_0002223 "starts"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002223 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002223 "Allen")
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002223 "Chris Mungall")
SubObjectPropertyOf(obo:RO_0002223 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002224 obo:RO_0002223)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002224 "x starts with y if and only if x has part y and the time point at which x starts is equivalent to the time point at which y starts. Formally: α(y) = α(x) ∧ ω(y) < ω(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002224 "Every insulin receptor signaling pathway starts with the binding of a ligand to the insulin receptor")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002224 "started by")
AnnotationAssertion(rdfs:label obo:RO_0002224 "starts with"@en)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002224 obo:IAO_0000125)
SubObjectPropertyOf(obo:RO_0002224 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002224)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002229 "inverse of ends with")
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002229 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:RO_0002229 "ends"@en)
SubObjectPropertyOf(obo:RO_0002229 obo:RO_0002222)
InverseObjectProperties(obo:RO_0002229 obo:RO_0002230)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002230 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002230 "x ends with y if and only if x has part y and the time point at which x ends is equivalent to the time point at which y ends. Formally: α(y) > α(x) ∧ ω(y) = ω(x), where α is a function that maps a process to a start point, and ω is a function that maps a process to an end point.")
AnnotationAssertion(rdfs:label obo:RO_0002230 "ends with"@en)
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002230 "finished by")
SubObjectPropertyOf(obo:RO_0002230 obo:RO_0002222)
TransitiveObjectProperty(obo:RO_0002230)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002233 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:RO_0002233 "has input"@en)
SubObjectPropertyOf(obo:RO_0002233 obo:RO_0000057)
InverseObjectProperties(obo:RO_0002352 obo:RO_0002233)
AnnotationAssertion(obo:IAO_0000114 obo:RO_0002234 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:RO_0002234 "has output"@en)
SubObjectPropertyOf(obo:RO_0002234 obo:RO_0000057)
InverseObjectProperties(obo:RO_0002353 obo:RO_0002234)
AnnotationAssertion(rdfs:label obo:RO_0002314 "inheres in part of"@en)
AnnotationAssertion(obo:RO_0001900 obo:RO_0002314 obo:RO_0001901)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002323 "Chris Mungall")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002323 "A mereological relationship or a topological relationship")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002323 obo:RO_0001901)
AnnotationAssertion(rdfs:label obo:RO_0002323 "mereotopologically related to"@en)
AnnotationAssertion(rdfs:label obo:RO_0002350 "member of"@en)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002350 "SIO")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "is member of")
AnnotationAssertion(obo:IAO_0000118 obo:RO_0002350 "member part of")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002350 "An organism that is a member of a population of organisms")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002350 obo:RO_0001901)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002350 "is member of is a mereological relation between a item and a collection.")
SubObjectPropertyOf(obo:RO_0002350 obo:BFO_0000050)
InverseObjectProperties(obo:RO_0002350 obo:RO_0002351)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002351 "SIO")
AnnotationAssertion(rdfs:label obo:RO_0002351 "has member"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002351 "has member is a mereological relation between a collection and an item.")
AnnotationAssertion(obo:RO_0001900 obo:RO_0002351 obo:RO_0001901)
SubObjectPropertyOf(obo:RO_0002351 obo:BFO_0000051)
IrreflexiveObjectProperty(obo:RO_0002351)
AnnotationAssertion(rdfs:label obo:RO_0002352 "input of"@en)
SubObjectPropertyOf(obo:RO_0002352 obo:RO_0000056)
AnnotationAssertion(rdfs:label obo:RO_0002353 "output of"@en)
SubObjectPropertyOf(obo:RO_0002353 obo:RO_0000056)
AnnotationAssertion(rdfs:label obo:RO_0002354 "formed as result of"@en)
SubObjectPropertyOf(obo:RO_0002354 obo:RO_0002353)
AnnotationAssertion(rdfs:label obo:RO_0001901 "axiom holds for all times"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001901 "

## Elucidation

This is used when the statement/axiom is assumed to hold true 'eternally'

## How to interpret (informal)

First the \"atemporal\" FOL is derived from the OWL using the standard
interpretation. This axiom is temporalized by embedding the axiom
within a for-all-times quantified sentence. The t argument is added to
all instantiation predicates and predicates that use this relation.

## Example

    Class: nucleus
    SubClassOf: part_of some cell

    forall t :
      forall n :
        instance_of(n,Nucleus,t)
         implies
        exists c :
          instance_of(c,Cell,t)
          part_of(n,c,t)

## Notes

This interpretation is *not* the same as an at-all-times relation

")
AnnotationAssertion(obo:IAO_0000115 obo:RO_0001902 "

## Elucidation

This is used when the first-order logic form of the relation is
binary, and takes no temporal argument.

## Example:

    Class: limb
    SubClassOf: develops_from some lateral-plate-mesoderm

     forall t, t2:
      forall x :
        instance_of(x,Limb,t)
         implies
        exists y :
          instance_of(y,LPM,t2)
          develops_from(x,y)


")
AnnotationAssertion(rdfs:label obo:RO_0001902 "relation has no temporal argument"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000111 "editor preferred term"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000112 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000112 "example of usage"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000114 "has curation status"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition"^^xsd:string)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000115 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000115 "definition"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000116 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000116 "editor note"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000117 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000117 "term editor"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000118 "alternative term"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000118 obo:IAO_0000125)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000119 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000119 "definition source"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000232 obo:IAO_0000122)
AnnotationAssertion(rdfs:label obo:IAO_0000232 "curator note"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000412 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0000412 "imported from"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000424 "expand expression to"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000425 "expand assertion to"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000426 "first order logic expression"@en)
AnnotationAssertion(rdfs:seeAlso obo:RO_0001900 "https://code.google.com/p/obo-relations/wiki/ROAndTime"^^xsd:anyURI)
AnnotationAssertion(rdfs:label obo:RO_0001900 "temporal interpretation"@en)
AnnotationAssertion(obo:IAO_0000117 obo:RO_0002161 "Chris Mungall"@en)
AnnotationAssertion(obo:IAO_0000115 obo:RO_0002161 "x never in taxon T if and only if T is a class, and x does not instantiate the class expression \"in taxon some T\". Note that this is a shortcut relation, and should be used as a hasValue restriction in OWL.")
AnnotationAssertion(obo:IAO_0000112 obo:RO_0002161 "tooth SubClassOf 'never in taxon' value 'Aves'")
AnnotationAssertion(rdfs:label obo:RO_0002161 "never in taxon"^^xsd:string)
AnnotationAssertion(obo:IAO_0000425 obo:RO_0002161 "?X DisjointWith RO_0002162 some ?Y ")
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002161 "PMID:20973947"@en)
AnnotationAssertion(obo:IAO_0000119 obo:RO_0002161 "PMID:17921072")
AnnotationAssertion(rdfs:label oboInOwl:shorthand "shorthand"^^xsd:string)
AnnotationAssertion(rdfs:label obo:IAO_0000589 "OBO foundry unique label"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000078 obo:IAO_0000125)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:RO_0002131) obo:RO_0002131)
AnnotationAssertion(rdfs:label obo:IAO_0000125 "pending final vetting"@en)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0100001 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0000225 "obsolescence reason specification"@en)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000051 obo:BFO_0000050) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000050) obo:RO_0002131)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002091 obo:BFO_0000062) obo:BFO_0000062)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000589 obo:IAO_0000125)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0000052 obo:BFO_0000050) obo:RO_0002314)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000050 obo:BFO_0000066) obo:BFO_0000066)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002093 obo:BFO_0000062) obo:RO_0002086)
AnnotationAssertion(obo:IAO_0000114 obo:IAO_0000225 obo:IAO_0000125)
AnnotationAssertion(rdfs:label obo:IAO_0100001 "term replaced by"@en)
AnnotationAssertion(rdfs:label obo:IAO_0000428 "requires discussion"@en)
SubObjectPropertyOf(ObjectPropertyChain(obo:RO_0002092 obo:BFO_0000062) obo:BFO_0000062)
SubObjectPropertyOf(ObjectPropertyChain(obo:BFO_0000066 obo:BFO_0000050) obo:BFO_0000066)
AnnotationAssertion(rdfs:label obo:IAO_0000078 "curation status specification"@en)
)